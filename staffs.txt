
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.zxing.integration.android.IntentIntegrator;
import com.google.zxing.integration.android.IntentResult;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class MainActivity extends AppCompatActivity {

    private Button btn;
    private String punchInTime, punchOutTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button scanButton = findViewById(R.id.scanButton);
        Button punchInButton = findViewById(R.id.punchInButton);
        Button punchOutButton = findViewById(R.id.punchOutButton);

        btn = findViewById(R.id.btn);

        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, AttendanceActivity.class);
                startActivity(intent);
            }
        });

        scanButton.setOnClickListener(v -> initiateScan());

        punchInButton.setOnClickListener(v -> punchIn());

        punchOutButton.setOnClickListener(v -> punchOut());
    }

    private void initiateScan() {
        IntentIntegrator integrator = new IntentIntegrator(this);
        integrator.setDesiredBarcodeFormats(IntentIntegrator.QR_CODE);
        integrator.setPrompt("Scan a QR Code");
        integrator.setCameraId(0);
        integrator.setBeepEnabled(true);
        integrator.setBarcodeImageEnabled(true);
        integrator.initiateScan();
    }

    private void punchIn() {
        punchInTime = getCurrentTime();
        Toast.makeText(this, "Punched In at " + punchInTime, Toast.LENGTH_SHORT).show();
        // Save punch in time to database or shared preferences
    }

    private void punchOut() {
        punchOutTime = getCurrentTime();
        Toast.makeText(this, "Punched Out at " + punchOutTime, Toast.LENGTH_SHORT).show();
        // Save punch out time to database or shared preferences
    }

    private String getCurrentTime() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
        return sdf.format(new Date());
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
        if (result != null) {
            if (result.getContents() == null) {
                Toast.makeText(this, "Cancelled", Toast.LENGTH_LONG).show();
            } else {
                Toast.makeText(this, "Scanned: " + result.getContents(), Toast.LENGTH_LONG).show();
                // Handle QR code scan result here
            }
        }
    }
}


_____________________________________________________


package com.example.qrstaff;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import com.google.zxing.integration.android.IntentIntegrator;
import com.google.zxing.integration.android.IntentResult;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

public class MainActivity extends AppCompatActivity {

    private TextView tvAbsent, tvPresent, tvLeave;
    private int absentCount = 0, presentCount = 10, leaveCount = 0;

    private ArrayList<String> punchHistory = new ArrayList<>();
    private boolean isPunchedIn = false;
    private Button btnPunchInOut;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        tvAbsent = findViewById(R.id.tvAbsent);
        tvPresent = findViewById(R.id.tvPresent);
        tvLeave = findViewById(R.id.tvLeave);
        btnPunchInOut = findViewById(R.id.btnPunchInOut);

        Button btnScanQr = findViewById(R.id.btnScanQr);
        btnScanQr.setOnClickListener(v -> initiateScan());

        btnPunchInOut.setOnClickListener(v -> {
            if (isPunchedIn) {
                punchOut();
            } else {
                punchIn();
            }
        });

        Button btnViewHistory = findViewById(R.id.btnViewHistory);
        btnViewHistory.setOnClickListener(v -> {
            Intent intent = new Intent(MainActivity.this, AttendanceActivity.class);
            intent.putStringArrayListExtra("punchHistory", punchHistory);
            startActivity(intent);
        });

        updateAttendanceDisplay();
    }

    private void initiateScan() {
        IntentIntegrator integrator = new IntentIntegrator(this);
        integrator.setDesiredBarcodeFormats(IntentIntegrator.QR_CODE);
        integrator.setPrompt("Scan a QR Code");
        integrator.setCameraId(0);
        integrator.setBeepEnabled(true);
        integrator.setBarcodeImageEnabled(true);
        integrator.initiateScan();
    }

    private void updateAttendanceDisplay() {
        tvAbsent.setText(absentCount + "\nAbsent");
        tvPresent.setText(presentCount + "\nPresent");
        tvLeave.setText(leaveCount + "\nLeaves");
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
        if (result != null) {
            if (result.getContents() == null) {
                Toast.makeText(this, "Cancelled", Toast.LENGTH_LONG).show();
            } else {
                presentCount++;
                updateAttendanceDisplay();
                Toast.makeText(this, "Scanned: " + result.getContents(), Toast.LENGTH_LONG).show();
            }
        }
    }

    private void punchIn() {
        String currentDateTime = getCurrentDateTime();
        punchHistory.add("Punch In: " + currentDateTime);
        isPunchedIn = true;
        btnPunchInOut.setText("Punch Out");
        Toast.makeText(this, "Punched In at " + currentDateTime, Toast.LENGTH_SHORT).show();
    }

    private void punchOut() {
        String currentDateTime = getCurrentDateTime();
        punchHistory.add("Punch Out: " + currentDateTime);
        isPunchedIn = false;
        btnPunchInOut.setText("Punch In");
        Toast.makeText(this, "Punched Out at " + currentDateTime, Toast.LENGTH_SHORT).show();
    }

    private String getCurrentDateTime() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
        return sdf.format(new Date());
    }
}